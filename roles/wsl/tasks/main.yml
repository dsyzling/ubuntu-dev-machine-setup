- name: Install packages for WSL development
  become: True
  become_user: root
  package:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
      - stow
      - emacs-gtk
      - ispell
      - zsh
      - zsh-doc
      - powerline
      - wl-clipboard
      - direnv

- name: Clone our dotfiles from github
  git:
    repo: https://github.com/dsyzling/dotfiles.git
    dest: ~/dotfiles

- name: Run stow script to install dotfiles
  shell: ./install-wsl.sh
  args:
    chdir: /home/{{ local_username }}/dotfiles
    
- name: Change default shell to ZSH
  shell: sudo chsh -s /usr/bin/zsh dsyzling
  args:
    chdir: /home/{{ local_username }}

- name: Install Starship Prompt
  shell: |
    mkdir -p ~/.local/bin
    curl -sS https://starship.rs/install.sh | sh -s -- -b ~/.local/bin -y
  args:
    chdir: /home/{{ local_username }}

- name: Install uv for Python
  shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  args:
    chdir: /home/{{ local_username }}

- name: Create template SyncThing directories for Emacs
  shell: |
    mkdir -p ~/Sync/deft
    mkdir -p ~/Sync/todo

- name: Install Firefox
  shell: |
    sudo install -d -m 0755 /etc/apt/keyrings
    wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
    gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") print "\nThe key fingerprint matches ("$0").\n"; else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}'
    echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
    echo '
    Package: *
    Pin: origin packages.mozilla.org
    Pin-Priority: 1000
    ' | sudo tee /etc/apt/preferences.d/mozilla

    sudo apt-get update && sudo apt-get install firefox

  args:
    chdir: /home/{{ local_username }}

#
# Emacs custom build for Wayland and WSL2
# nodejs and npm required to install pyright from within Emacs.
#
- name: Install packages for Custom Emacs Build
  become: True
  become_user: root
  package:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
      - autoconf
      - texinfo
      - libgtk-3-dev
      - libtiff5-dev
      - libgif-dev
      - libjpeg-dev
      - libpng-dev
      - libxpm-dev
      - libxml2-dev
      - libncurses-dev
      - libtiff-dev
      - gnutls-dev
      - imagemagick
      - libtree-sitter-dev
      - libgccjit-13-dev
      - texlive-full
      - texlive-latex-base
      - texlive-latex-recommended
      - texlive-latex-recommended-doc
      - texlive-science
      - texlive-science-doc
      - texlive-fonts-recommended
      - texlive-fonts-recommended-doc
      - texlive-luatex
      - texlive-xetex
      - nodejs
      - npm
      - qtwayland5

- name: Create pyenv directory for use within Emacs
  shell: |
    mkdir -p ~/.pyenv/versions

- name: Custom Emacs Build
  shell: |
    mkdir ~/dev
    cd ~/dev
    git clone git://git.sv.gnu.org/emacs.git
    cd emacs
    git checkout emacs-30
    ./autogen.sh
    ./configure --with-native-compilation --with-pgtk --with-modules --with-rsvg --with-tree-sitter --with-xml2
    make -j8
    sudo make install
    cd ~/.emacs.d/personal/modules
    gpg --batch --passphrase "{{ dssecretspass }}" --output ds-secrets.el -d ds-secrets.el.gpg

#
# Note: Update with release of Quarto required.
#
- name: Install Quarto for Markdown Research Documents
  shell: |
    wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.6.40/quarto-1.6.40-linux-amd64.deb
    sudo dpkg -i quarto-1.6.40-linux-amd64.deb
    rm *.deb
  args:
    chdir: /home/{{ local_username }}
